"use strict";
function _typeof(e) {
  return (_typeof =
    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            "function" == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        })(e);
}
function ownKeys(t, e) {
  var r = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(t);
    e &&
      (n = n.filter(function (e) {
        return Object.getOwnPropertyDescriptor(t, e).enumerable;
      })),
      r.push.apply(r, n);
  }
  return r;
}
function _objectSpread(t) {
  for (var e = 1; e < arguments.length; e++) {
    var r = null != arguments[e] ? arguments[e] : {};
    e % 2
      ? ownKeys(Object(r), !0).forEach(function (e) {
          _defineProperty(t, e, r[e]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
      : ownKeys(Object(r)).forEach(function (e) {
          Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
        });
  }
  return t;
}
function _defineProperty(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
!(function (t) {
  var e = {
    init: function () {
      e.masonryGrid(),
        e.stickyNavbar(),
        e.stuckNavbarMenuToggle(),
        e.passwordVisibilityToggle(),
        e.customFileInput(),
        e.fileDropArea(),
        e.formValidation(),
        e.multilevelDropdown(),
        e.smoothScroll(),
        e.scrollTopButton(),
        e.offcanvasSidebar(),
        e.tooltips(),
        e.popovers(),
        e.toasts(),
        e.disableDropdownAutohide(),
        e.carousel(),
        e.imageZoom(),
        e.rangeSlider(),
        e.filterList(),
        e.dataFilter(),
        e.labelUpdate(),
        e.radioTabs(),
        e.countdown(),
        e.creditCard()
    },
    masonryGrid: function () {
      var e,
        t = document.querySelectorAll(".cz-masonry-grid");
      if (null !== t)
        for (var r = 0; r < t.length; r++)
          (e = new Shuffle(t[r], {
            itemSelector: ".grid-item",
            sizer: ".grid-item",
          })),
            imagesLoaded(t[r]).on("progress", function () {
              e.layout();
            });
    },
    stickyNavbar: function () {
      var t = document.querySelector(".navbar-sticky");
      if (null != t) {
        var e = t.classList,
          r = t.offsetHeight;
        e.contains("navbar-floating") && e.contains("navbar-dark")
          ? window.addEventListener("scroll", function (e) {
              500 < e.currentTarget.pageYOffset
                ? (t.classList.remove("navbar-dark"),
                  t.classList.add("navbar-light", "navbar-stuck"))
                : (t.classList.remove("navbar-light", "navbar-stuck"),
                  t.classList.add("navbar-dark"));
            })
          : e.contains("navbar-floating") && e.contains("navbar-light")
          ? window.addEventListener("scroll", function (e) {
              500 < e.currentTarget.pageYOffset
                ? t.classList.add("navbar-stuck")
                : t.classList.remove("navbar-stuck");
            })
          : window.addEventListener("scroll", function (e) {
              500 < e.currentTarget.pageYOffset
                ? ((document.body.style.paddingTop = r + "px"),
                  t.classList.add("navbar-stuck"))
                : ((document.body.style.paddingTop = ""),
                  t.classList.remove("navbar-stuck"));
            });
      }
    },
    stuckNavbarMenuToggle: function () {
      var e = document.querySelector(".navbar-stuck-toggler"),
        t = document.querySelector(".navbar-stuck-menu");
      null != e &&
        e.addEventListener("click", function (e) {
          t.classList.toggle("show"), e.preventDefault();
        });
    },
    passwordVisibilityToggle: function () {
      for (
        var r = document.querySelectorAll(".password-toggle"),
          e = function (e) {
            var t = r[e].querySelector(".form-control");
            r[e].querySelector(".password-toggle-btn").addEventListener(
              "click",
              function (e) {
                "checkbox" === e.target.type &&
                  (e.target.checked
                    ? (t.type = "text")
                    : (t.type = "password"));
              },
              !1
            );
          },
          t = 0;
        t < r.length;
        t++
      )
        e(t);
    },
    customFileInput: function () {
      bsCustomFileInput.init();
    },
    fileDropArea: function () {
      for (
        var t = document.querySelectorAll(".cz-file-drop-area"),
          e = function (e) {
            var o = t[e].querySelector(".cz-file-drop-input"),
              a = t[e].querySelector(".cz-file-drop-message"),
              i = t[e].querySelector(".cz-file-drop-icon");
            t[e]
              .querySelector(".cz-file-drop-btn")
              .addEventListener("click", function () {
                o.click();
              }),
              o.addEventListener("change", function () {
                if (o.files && o.files[0]) {
                  var e = new FileReader();
                  (e.onload = function (e) {
                    var t = e.target.result,
                      r = o.files[0].name;
                    if (((a.innerHTML = r), t.startsWith("data:image"))) {
                      var n = new Image();
                      (n.src = t),
                        (n.onload = function () {
                          (i.className =
                            "cz-file-drop-preview img-thumbnail rounded"),
                            (i.innerHTML =
                              '<img src="' + n.src + '" alt="' + r + '">'),
                            console.log(this.width);
                        });
                    } else
                      t.startsWith("data:video")
                        ? ((i.innerHTML = ""),
                          (i.className = ""),
                          (i.className = "cz-file-drop-icon czi-video"))
                        : ((i.innerHTML = ""),
                          (i.className = ""),
                          (i.className = "cz-file-drop-icon czi-document"));
                  }),
                    e.readAsDataURL(o.files[0]);
                }
              });
          },
          r = 0;
        r < t.length;
        r++
      )
        e(r);
    },
    formValidation: function () {
      window.addEventListener(
        "load",
        function () {
          var e = document.getElementsByClassName("needs-validation");
          Array.prototype.filter.call(e, function (t) {
            t.addEventListener(
              "submit",
              function (e) {
                !1 === t.checkValidity() &&
                  (e.preventDefault(), e.stopPropagation()),
                  t.classList.add("was-validated");
              },
              !1
            );
          });
        },
        !1
      );
    },
    multilevelDropdown: function () {
      t(".dropdown-menu [data-toggle='dropdown']").on("click", function (e) {
        e.preventDefault(),
          e.stopPropagation(),
          t(this).siblings().toggleClass("show"),
          t(this).next().hasClass("show") ||
            t(this)
              .parents(".dropdown-menu")
              .first()
              .find(".show")
              .removeClass("show"),
          t(this)
            .parents("li.nav-item.dropdown.show")
            .on("hidden.bs.dropdown", function () {
              t(".dropdown-submenu .show").removeClass("show");
            });
      });
    },
    smoothScroll: function () {
      new SmoothScroll("[data-scroll]", {
        speed: 800,
        speedAsDuration: !0,
        offset: 40,
        header: "[data-scroll-header]",
        updateURL: !1,
      });
    },
    scrollTopButton: function () {
      var t = document.querySelector(".btn-scroll-top");
      if (null != t) {
        var r = parseInt(600, 10);
        window.addEventListener("scroll", function (e) {
          e.currentTarget.pageYOffset > r
            ? t.classList.add("show")
            : t.classList.remove("show");
        });
      }
    },
    offcanvasSidebar: function () {
      for (
        var e = document.querySelectorAll('[data-toggle="sidebar"]'),
          t = document.querySelectorAll('[data-dismiss="sidebar"]'),
          r = document.querySelector("body"),
          n = 0;
        n < e.length;
        n++
      )
        e[n].addEventListener("click", function (e) {
          e.preventDefault();
          var t = e.currentTarget.getAttribute("href");
          document.querySelector(t).classList.add("show"),
            r.classList.add("offcanvas-open");
        });
      for (var o = 0; o < t.length; o++)
        t[o].addEventListener("click", function (e) {
          e.currentTarget.closest(".cz-sidebar").classList.remove("show"),
            r.classList.remove("offcanvas-open");
        });
    },
    tooltips: function () {
      t('[data-toggle="tooltip"]').tooltip();
    },
    popovers: function () {
      t('[data-toggle="popover"]').popover();
    },
    toasts: function () {
      t('[data-toggle="toast"]').on("click", function () {
        var e = t(this).data("target");
        t(e).toast("show");
      });
    },
    disableDropdownAutohide: function () {
      for (
        var e = document.querySelectorAll(".disable-autohide .custom-select"),
          t = 0;
        t < e.length;
        t++
      )
        e[t].addEventListener("click", function (e) {
          e.stopPropagation();
        });
    },
    carousel: function () {
      !(function (e, t, r) {
        for (var n = 0; n < e.length; n++) t.call(r, n, e[n]);
      })(
        document.querySelectorAll(".cz-carousel .cz-carousel-inner"),
        function (e, t) {
          var r,
            n = {
              container: t,
              controlsText: [
                '<i class="czi-arrow-left"></i>',
                '<i class="czi-arrow-right"></i>',
              ],
              navPosition: "bottom",
              mouseDrag: !0,
              speed: 500,
              autoplayHoverPause: !0,
              autoplayButtonOutput: !1,
            };
          null != t.dataset.carouselOptions &&
            (r = JSON.parse(t.dataset.carouselOptions));
          var o = _objectSpread(_objectSpread({}, n), r);
          tns(o);
        }
      );
    },
    imageZoom: function () {
      for (
        var e = document.querySelectorAll(".cz-image-zoom"), t = 0;
        t < e.length;
        t++
      )
        new Drift(e[t], {
          paneContainer: e[t].parentElement.querySelector(
            ".cz-image-zoom-pane"
          ),
        });
    },
    rangeSlider: function () {
      for (
        var a = document.querySelectorAll(".cz-range-slider"),
          e = function (e) {
            var t = a[e].querySelector(".cz-range-slider-ui"),
              n = a[e].querySelector(".cz-range-slider-value-min"),
              o = a[e].querySelector(".cz-range-slider-value-max"),
              r = {
                dataStartMin: parseInt(a[e].dataset.startMin, 10),
                dataStartMax: parseInt(a[e].dataset.startMax, 10),
                dataMin: parseInt(a[e].dataset.min, 10),
                dataMax: parseInt(a[e].dataset.max, 10),
                dataStep: parseInt(a[e].dataset.step, 10),
              };
            noUiSlider.create(t, {
              start: [r.dataStartMin, r.dataStartMax],
              connect: !0,
              step: r.dataStep,
              pips: { mode: "count", values: 5 },
              tooltips: !0,
              range: { min: r.dataMin, max: r.dataMax },
              format: {
                to: function (e) {
                  return "$" + parseInt(e, 10);
                },
                from: function (e) {
                  return Number(e);
                },
              },
            }),
              t.noUiSlider.on("update", function (e, t) {
                var r = e[t];
                (r = r.replace(/\D/g, "")),
                  t ? (o.value = Math.round(r)) : (n.value = Math.round(r));
              }),
              n.addEventListener("change", function () {
                t.noUiSlider.set([this.value, null]);
              }),
              o.addEventListener("change", function () {
                t.noUiSlider.set([null, this.value]);
              });
          },
          t = 0;
        t < a.length;
        t++
      )
        e(t);
    },
    filterList: function () {
      for (
        var t = document.querySelectorAll(".cz-filter"),
          e = function (e) {
            var r = t[e].querySelector(".cz-filter-search"),
              n = t[e]
                .querySelector(".cz-filter-list")
                .querySelectorAll(".cz-filter-item");
            if (!r) return "continue";
            r.addEventListener("keyup", function () {
              for (var e = r.value.toLowerCase(), t = 0; t < n.length; t++) {
                -1 <
                n[t]
                  .querySelector(".cz-filter-item-text")
                  .innerHTML.toLowerCase()
                  .indexOf(e)
                  ? n[t].classList.remove("d-none")
                  : n[t].classList.add("d-none");
              }
            });
          },
          r = 0;
        r < t.length;
        r++
      )
        e(r);
    },
    dataFilter: function () {
      var e = document.querySelector('[data-filter="trigger"]'),
        n = document.querySelectorAll('[data-filter="target"]');
      null !== e &&
        e.addEventListener("change", function () {
          var e = this.options[this.selectedIndex].value.toLowerCase();
          if ("all" === e)
            for (var t = 0; t < n.length; t++) n[t].classList.remove("d-none");
          else {
            for (var r = 0; r < n.length; r++) n[r].classList.add("d-none");
            document.querySelector("#" + e).classList.remove("d-none");
          }
        });
    },
    labelUpdate: function () {
      for (
        var e = document.querySelectorAll("[data-label]"), t = 0;
        t < e.length;
        t++
      )
        e[t].addEventListener("change", function () {
          var e = this.dataset.label;
          try {
            document.getElementById(e).textContent = this.value;
          } catch (e) {
            (e.message = "Cannot set property 'textContent' of null"),
              console.error(
                "Make sure the [data-label] matches with the id of the target element you want to change text of!"
              );
          }
        });
    },
    radioTabs: function () {
      for (
        var e = document.querySelectorAll('[data-toggle="radioTab"]'), t = 0;
        t < e.length;
        t++
      )
        e[t].addEventListener("click", function () {
          var e = this.dataset.target;
          document
            .querySelector(this.dataset.parent)
            .querySelectorAll(".radio-tab-pane")
            .forEach(function (e) {
              e.classList.remove("active");
            }),
            document.querySelector(e).classList.add("active");
        });
    },
    countdown: function () {
      var t = document.querySelectorAll(".cz-countdown");
      if (null != t)
        for (
          var e = function (e) {
              var r = t[e].dataset.countdown,
                n = t[e].querySelector(
                  ".cz-countdown-days .cz-countdown-value"
                ),
                o = t[e].querySelector(
                  ".cz-countdown-hours .cz-countdown-value"
                ),
                a = t[e].querySelector(
                  ".cz-countdown-minutes .cz-countdown-value"
                ),
                i = t[e].querySelector(
                  ".cz-countdown-seconds .cz-countdown-value"
                ),
                s = void 0,
                c = void 0,
                l = void 0,
                d = void 0;
              if (((r = new Date(r).getTime()), isNaN(r))) return { v: void 0 };
              setInterval(function () {
                var e = new Date().getTime(),
                  t = parseInt((r - e) / 1e3);
                {
                  if (!(0 <= t)) return;
                  (s = parseInt(t / 86400)),
                    (t %= 86400),
                    (c = parseInt(t / 3600)),
                    (t %= 3600),
                    (l = parseInt(t / 60)),
                    (t %= 60),
                    (d = parseInt(t)),
                    null != n && (n.innerHTML = parseInt(s, 10)),
                    null != o && (o.innerHTML = c < 10 ? "0" + c : c),
                    null != a && (a.innerHTML = l < 10 ? "0" + l : l),
                    null != i && (i.innerHTML = d < 10 ? "0" + d : d);
                }
              }, 1e3);
            },
            r = 0;
          r < t.length;
          r++
        ) {
          var n = e(r);
          if ("object" === _typeof(n)) return n.v;
        }
    },
    creditCard: function () {
      var e = document.querySelector(".interactive-credit-card");
      if (null !== e) new Card({ form: e, container: ".card-wrapper" });
    }
  };
  e.init();
})(jQuery);
